# Basic flow where we do all generic tests:
#   - `cargo check`: Check that our crate compiles
#   - `cargo fmt --all -- --check`: Checks that our crate follows basic Rust formatting
#   - `cargo workspaces exec cargo +nightly udeps`: Makes sure that the branch does not have any unused dependencies
#   - `cargo test`: Makes sure tests are passing

# Basic checks should run on PR on `develop` or `main`
on:
  pull_request:
    branches:
      - main
      - develop


name: Check and Lint

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  udeps:
    name: Unused deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions/cache@v2
        id: cache-deps
        with:
          path: |
            ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-udeps
      - uses: actions-rs/cargo@v1
        if: steps.cache-deps.outputs.cache-hit != 'true'
        with:
          command: install
          args: cargo-workspaces
      - uses: actions-rs/cargo@v1
        if: steps.cache-deps.outputs.cache-hit != 'true'
        with:
          command: install
          args: cargo-udeps --locked
      - uses: actions-rs/cargo@v1
        with:
          command: workspaces
          args: exec cargo +nightly udeps

  verify-manifests:
    name: Verify manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions/cache@v2
        id: cache-deps
        with:
          path: |
            ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-verify-project
      - uses: actions-rs/cargo@v1
        if: steps.cache-deps.outputs.cache-hit != 'true'
        with:
          command: install
          args: cargo-workspaces
      - uses: actions-rs/cargo@v1
        if: steps.cache-deps.outputs.cache-hit != 'true'
        with:
          command: install
          args: cargo-verify-project
      - uses: actions-rs/cargo@v1
        with:
          command: workspaces
          args: exec cargo verify-project

  test:
    name: Test repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: Clippy Output